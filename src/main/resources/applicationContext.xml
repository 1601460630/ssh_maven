<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.2.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">
	
	<!-- 读取db.properties文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	<!-- 配置c3p0连接池 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- 核心事务管理器  -->
	<bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置通知
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="persisit*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"/>
			<tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice>  -->
	<!-- 配置将通知织入目标对象 
	<aop:config> -->
		<!-- 配置切点
		<aop:pointcut expression="execution(* cn.itcast.service.impl.*ServiceImpl.*(..))" id="txPc"/>  -->
		<!-- 配置切面 
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"/> 
	</aop:config> -->
	<!-- =========================================================== -->
	<!-- 开启注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 将sessionFactory配置到spring容器中,这里要注意自己的hibernate是哪个版本的 -->
	<!-- 加载配置方案1:仍然使用外部的hibernate.cfg.xml配指信息,不推荐 -->
	<!-- <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
	</bean>	 -->
	<!-- 加载配置方案2: -->
	<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 将连接池注入到sessionFactory,hibernate会通过连接池获得连接 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置hibernate基本信息 -->
		<property name="hibernateProperties">
			<props>
				<!-- 必写配置 -->
				<!-- <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
				<prop key="hibernate.connection.url">jdbc:mysql:///ssh_crm</prop>
				<prop key="hibernate.connection.username">root</prop>
				<prop key="hibernate.connection.password">123456</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- 可选配置 -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 引入orm元数据,指定orm元数据所在的包的路径,spring会自动读取包中的所有配置 -->
		<property name="mappingDirectoryLocations" value="classpath:hbm"></property>
	</bean>
	
	
	
	
	
	<!-- action -->		
	<!-- 应该会有相关的直接读取整个包的方式，仅是个人猜测，就不去管了 -->
	<!-- 注意:action对象作用范围一定是多例的，这样才符合struts2架构 -->			
	<bean name="userAction" class="cn.itcast.web.action.UserAction" scope="prototype" >
		<property name="userService" ref="userService" ></property>
	</bean>
	<bean name="customerAction" class="cn.itcast.web.action.CustomerAction" scope="prototype" >
		<property name="customerService" ref="customerService" ></property>
	</bean>
	<bean name="linkManAction" class="cn.itcast.web.action.LinkManAction" scope="prototype" >
		<property name="linkManService" ref="linkManService" ></property>
	</bean>
	<bean name="guestAction" class="cn.itcast.web.action.GuestAction" scope="prototype" >
		<property name="guestService" ref="guestService" ></property>
	</bean>
	<bean name="complexAction" class="cn.itcast.web.action.ComplexAction" scope="prototype" >
		<property name="customerService" ref="customerService" ></property>
		<property name="linkManService" ref="linkManService" ></property>
		<property name="guestService" ref="guestService" ></property>
	</bean>
	<bean name="sumAction" class="cn.itcast.web.action.SumAction" scope="prototype" >
		<property name="sumService" ref="sumService" ></property>
	</bean>
	<!-- service -->
	<bean name="userService" class="cn.itcast.service.impl.UserServiceImpl" >
		<property name="ud" ref="userDao"></property>
	</bean>
	<bean name="customerService" class="cn.itcast.service.impl.CustomerServiceImpl" >
		<property name="cd" ref="customerDao"></property>
	</bean>
	<bean name="linkManService" class="cn.itcast.service.impl.LinkManServiceImpl" >
		<property name="ld" ref="linkManDao"></property>
	</bean>
	<bean name="guestService" class="cn.itcast.service.impl.GuestServiceImpl" >
		<property name="gd" ref="guestDao"></property>
	</bean>
	<bean name="sumService" class="cn.itcast.service.impl.SumServiceImpl" >
		<property name="sd" ref="sumDao"></property>
	</bean>
	<!-- dao -->
	<bean name="userDao" class="cn.itcast.dao.impl.UserDaoImpl" >
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
	<bean name="customerDao" class="cn.itcast.dao.impl.CustomerDaoImpl" >
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
	<bean name="linkManDao" class="cn.itcast.dao.impl.LinkManDaoImpl" >
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
	<bean name="guestDao" class="cn.itcast.dao.impl.GuestDaoImpl" >
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
	<bean name="sumDao" class="cn.itcast.dao.impl.SumDaoImpl" >
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
</beans>